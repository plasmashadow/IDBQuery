function DataBase(a){var b=this;void 0===window.IDBDriver&&(window.IDBDriver=this),b.version=2,b.DB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,b.dbname=a,this.tables=[],this.createSchemas=function(){var a=b.tables,c=b.DB.open(b.dbname,b.version);c.onsuccess=function(c){var d=c.target.result,e=parseInt(d.version);console.log(e),d.close();var f=b.DB.open(b.dbname,e+1);console.log(e+1),f.onupgradeneeded=function(b){var c=b.target.result;if(a.hasOwnProperty("length"))a.forEach(function(a){var b=c.createObjectStore(a.tabel.name,{keyPath:a.tabel.getPrimaryKey().name});a.tabel.properties.forEach(function(a){a.key?b.createIndex(a.name,a.name,{unique:!0}):b.createIndex(a.name,a.name,{unique:!1})})});else{var d=c.createObjectStore(a.tabel.name,{keyPath:a.tabel.getPrimaryKey().name});a.tabel.forEach(function(a){a.key?d.createIndex(a.name,a.name,{unique:!0}):d.createIndex(a.name,a.name,{unique:!1})})}},f.onsuccess=function(a){a.target.result.close()}}}}function Property(a,b){this.name=a,this.type=b,this.complement=!1,this.isAuto=!1,this.values=[]}function Schema(a){var b=this;if(b.data=a,function(){try{var a=0;b.tablename=b.data.name?b.data.name:"SchemaUndefined",b.tabel=new Table(b.tablename),b.data.properties&&b.data.properties.forEach(function(c){var d=new Property(c.name,c.type);if(void 0==d.type)throw d;c.key&&c.auto?(d.setKey(!0),a++):c.key&&(d.setKey(!1),a++),b.tabel.add(d),1>=a&&(d.code=1)}),b.data.foreignKeys&&window.tables.forEach(function(a){b.data.foreignKeys.forEach(function(c){c.name===a.name&&b.tabel.addRelation(a)})})}catch(c){switch(c.code){case 1:return void console.log("Table cannot have more than one primary key")}console.log(c)}return!0}(b.data),!b.tabel.getPrimaryKey()){var c=new Property(b.tabel.name+"_id","number");c.setKey(!0),b.tabel.add(c)}window.tables.push(b.tabel),console.log(b.tabel)}function Table(a){this.name=a,this.properties=[],this.foreignKeys=[],this.values=[]}DataBase.prototype={addTable:function(a){var b=new Schema(a);this.tables.push(b)},Initialize:function(){this.createSchemas()},OnSave:function(){},getTable:function(a){var b;for(var c in this.tables){var d=this.tables[c];d.tabel.name==a&&(b=d.tabel)}return b},Save:function(a,b){try{var c=this.getTable(a);c.put(b),this.Store(c.name)}catch(d){console.log("Error Commiting to database")}this.OnSave(event)},Store:function(a){var b=self.dbname;self.version=self.version;var c=this.getTable(a),d=self.DB.open(b,self.version);d.onerror=function(){console.log("Error Occured While Opening the Table "+e)},d.onsuccess=function(b){for(var d=(b.target.result,self.DB.transaction(a,"readwrite")),e=d.objectStore(a);c.values.length>0;)e.add(c.values.shift())}}},Property.prototype={put:function(a){try{if(this.type!=typeof a)throw a;this.values.push(a)}catch(b){console.log("Prototype Mismatch "+b)}},setKey:function(a){a?(this.isAuto=!0,this.complement=!0):this.complement=!0},get:function(a){return this.values[a]},toString:function(){console.log(this.name+"  "+this.type+" "+this.values)}},window.tables=[],Table.prototype={current:0,add:function(a){this.properties.push(a)},getPrimaryKey:function(){for(var a=0;a<this.properties.length;a++)if(this.properties[a].complement)return this.properties[a]},addRelation:function(a){this.foreignKeys.push(a);try{if(!a.getPrimaryKey())throw a;var b=Object.create(a.getPrimaryKey());b.relation="foreign",this.properties.push(b)}catch(c){console.log("The table doesn't have a primary key",c.name)}},toString:function(){console.log(this.name+" "+this.properties+" "+this.foreignKeys+" "+this.values)},put:function(a){try{var b=!1,c=this.properties;for(var d in a)c.forEach(function(c){if(d===c.name){if(c.type!==typeof a[d])throw a;b=!0}});b&&self.values.push(a)}catch(e){console.log(e)}}};